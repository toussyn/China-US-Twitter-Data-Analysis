{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## IMPORT MODULES"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import sys\n",
    "import os\n",
    "import re\n",
    "\n",
    "sys.path.append(os.path.abspath(os.path.join('..')))\n",
    "from extract_dataframe import TweetDfExtractor\n",
    "from extract_dataframe import read_json\n",
    "from clean_tweets_dataframe import Clean_Tweets\n",
    "_, global_tweet_list = read_json(\"../data/global_twitter_data.json\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## INITIALIZE TweetDfExtractor INSTANCE AND GET DATA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "global_tweet_df_extractor = TweetDfExtractor(global_tweet_list)\n",
    "global_tweets_df = global_tweet_df_extractor.get_tweet_df()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## DATA PREPARATION"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### CHECK IF ALL DESIRED COLUMNS ARE EXTRACTED "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_at</th>\n",
       "      <th>source</th>\n",
       "      <th>full_text</th>\n",
       "      <th>polarity</th>\n",
       "      <th>subjectivity</th>\n",
       "      <th>sentiment</th>\n",
       "      <th>lang</th>\n",
       "      <th>favorite_count</th>\n",
       "      <th>retweet_count</th>\n",
       "      <th>original_author</th>\n",
       "      <th>followers_count</th>\n",
       "      <th>friends_count</th>\n",
       "      <th>possibly_sensitive</th>\n",
       "      <th>hashtags</th>\n",
       "      <th>user_mentions</th>\n",
       "      <th>place</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Sun Aug 07 22:31:20 +0000 2022</td>\n",
       "      <td>&lt;a href=\"http://twitter.com/download/android\" ...</td>\n",
       "      <td>RT @i_ameztoy Extra random image I Lets focus ...</td>\n",
       "      <td>-1.250000e-01</td>\n",
       "      <td>0.190625</td>\n",
       "      <td>negative</td>\n",
       "      <td>en</td>\n",
       "      <td>15760</td>\n",
       "      <td>2</td>\n",
       "      <td>i_ameztoy</td>\n",
       "      <td>20497</td>\n",
       "      <td>2621</td>\n",
       "      <td>None</td>\n",
       "      <td>City++++</td>\n",
       "      <td>i_ameztoy++++</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Sun Aug 07 22:31:16 +0000 2022</td>\n",
       "      <td>&lt;a href=\"http://twitter.com/download/android\" ...</td>\n",
       "      <td>RT @IndoPac_Info #Chinas media explains the mi...</td>\n",
       "      <td>-1.000000e-01</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>negative</td>\n",
       "      <td>en</td>\n",
       "      <td>6967</td>\n",
       "      <td>201</td>\n",
       "      <td>ZIisq</td>\n",
       "      <td>65</td>\n",
       "      <td>272</td>\n",
       "      <td>None</td>\n",
       "      <td>China++++Taiwan++++</td>\n",
       "      <td>IndoPac_Info++++</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Sun Aug 07 22:31:07 +0000 2022</td>\n",
       "      <td>&lt;a href=\"http://twitter.com/download/android\" ...</td>\n",
       "      <td>China even cut off communication they dont anw...</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>neutral</td>\n",
       "      <td>en</td>\n",
       "      <td>2166</td>\n",
       "      <td>0</td>\n",
       "      <td>Fin21Free</td>\n",
       "      <td>85</td>\n",
       "      <td>392</td>\n",
       "      <td>None</td>\n",
       "      <td>XiJinping++++</td>\n",
       "      <td>ZelenskyyUa++++</td>\n",
       "      <td>Netherlands</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Sun Aug 07 22:31:06 +0000 2022</td>\n",
       "      <td>&lt;a href=\"http://twitter.com/download/android\" ...</td>\n",
       "      <td>Putin to #XiJinping I told you my friend Taiwa...</td>\n",
       "      <td>1.000000e-01</td>\n",
       "      <td>0.350000</td>\n",
       "      <td>positive</td>\n",
       "      <td>en</td>\n",
       "      <td>2166</td>\n",
       "      <td>0</td>\n",
       "      <td>Fin21Free</td>\n",
       "      <td>85</td>\n",
       "      <td>392</td>\n",
       "      <td>None</td>\n",
       "      <td>XiJinping++++</td>\n",
       "      <td></td>\n",
       "      <td>Netherlands</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Sun Aug 07 22:31:04 +0000 2022</td>\n",
       "      <td>&lt;a href=\"http://twitter.com/download/iphone\" r...</td>\n",
       "      <td>RT @ChinaUncensored I’m sorry I thought Taiwan...</td>\n",
       "      <td>-6.938894e-18</td>\n",
       "      <td>0.556250</td>\n",
       "      <td>negative</td>\n",
       "      <td>en</td>\n",
       "      <td>17247</td>\n",
       "      <td>381</td>\n",
       "      <td>VizziniDolores</td>\n",
       "      <td>910</td>\n",
       "      <td>2608</td>\n",
       "      <td>None</td>\n",
       "      <td></td>\n",
       "      <td>ChinaUncensored++++</td>\n",
       "      <td>Ayent, Schweiz</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       created_at  \\\n",
       "0  Sun Aug 07 22:31:20 +0000 2022   \n",
       "1  Sun Aug 07 22:31:16 +0000 2022   \n",
       "2  Sun Aug 07 22:31:07 +0000 2022   \n",
       "3  Sun Aug 07 22:31:06 +0000 2022   \n",
       "4  Sun Aug 07 22:31:04 +0000 2022   \n",
       "\n",
       "                                              source  \\\n",
       "0  <a href=\"http://twitter.com/download/android\" ...   \n",
       "1  <a href=\"http://twitter.com/download/android\" ...   \n",
       "2  <a href=\"http://twitter.com/download/android\" ...   \n",
       "3  <a href=\"http://twitter.com/download/android\" ...   \n",
       "4  <a href=\"http://twitter.com/download/iphone\" r...   \n",
       "\n",
       "                                           full_text      polarity  \\\n",
       "0  RT @i_ameztoy Extra random image I Lets focus ... -1.250000e-01   \n",
       "1  RT @IndoPac_Info #Chinas media explains the mi... -1.000000e-01   \n",
       "2  China even cut off communication they dont anw...  0.000000e+00   \n",
       "3  Putin to #XiJinping I told you my friend Taiwa...  1.000000e-01   \n",
       "4  RT @ChinaUncensored I’m sorry I thought Taiwan... -6.938894e-18   \n",
       "\n",
       "   subjectivity sentiment lang  favorite_count  retweet_count original_author  \\\n",
       "0      0.190625  negative   en           15760              2       i_ameztoy   \n",
       "1      0.100000  negative   en            6967            201           ZIisq   \n",
       "2      0.000000   neutral   en            2166              0       Fin21Free   \n",
       "3      0.350000  positive   en            2166              0       Fin21Free   \n",
       "4      0.556250  negative   en           17247            381  VizziniDolores   \n",
       "\n",
       "   followers_count  friends_count possibly_sensitive             hashtags  \\\n",
       "0            20497           2621               None             City++++   \n",
       "1               65            272               None  China++++Taiwan++++   \n",
       "2               85            392               None        XiJinping++++   \n",
       "3               85            392               None        XiJinping++++   \n",
       "4              910           2608               None                        \n",
       "\n",
       "         user_mentions           place  \n",
       "0        i_ameztoy++++                  \n",
       "1     IndoPac_Info++++                  \n",
       "2      ZelenskyyUa++++     Netherlands  \n",
       "3                          Netherlands  \n",
       "4  ChinaUncensored++++  Ayent, Schweiz  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(22000, 16)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### INITIALIZE Clean_Tweets INSTANCE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Clean_Tweets INSTANCE CREATED\n"
     ]
    }
   ],
   "source": [
    "global_clean_tweets = Clean_Tweets(global_tweets_df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### DROP DUPLICATES \n",
    "##### BY USING PANDAS df.drop_duplicates() which is called by our global_clean_tweets.drop_duplicate(global_tweets_df) function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(21997, 16)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df = global_clean_tweets.drop_duplicate(global_tweets_df)\n",
    "global_tweets_df.shape\n",
    "# We can see that on the below output we have droped 3 duplicate rows."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### REMOVE NON ENGLISH"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(21997, 16)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df = global_clean_tweets.remove_non_english_tweets(global_tweets_df)\n",
    "global_tweets_df.shape\n",
    "# We can see no rows were dropped because all the languages represent 'en'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### CHECK FOR NULL/MISSING VALUES"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "created_at                0\n",
       "source                    0\n",
       "full_text                 0\n",
       "polarity                  0\n",
       "subjectivity              0\n",
       "sentiment                 0\n",
       "lang                      0\n",
       "favorite_count            0\n",
       "retweet_count             0\n",
       "original_author           0\n",
       "followers_count           0\n",
       "friends_count             0\n",
       "possibly_sensitive    15807\n",
       "hashtags                  0\n",
       "user_mentions             0\n",
       "place                     0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df.isna().sum()\n",
    "# We can see that we have 15807 missing values under the column 'possibly_sensitive'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### HANDLE MISSING DATA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "created_at            0\n",
       "source                0\n",
       "full_text             0\n",
       "polarity              0\n",
       "subjectivity          0\n",
       "sentiment             0\n",
       "lang                  0\n",
       "favorite_count        0\n",
       "retweet_count         0\n",
       "original_author       0\n",
       "followers_count       0\n",
       "friends_count         0\n",
       "possibly_sensitive    0\n",
       "hashtags              0\n",
       "user_mentions         0\n",
       "place                 0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df['possibly_sensitive'] = global_tweets_df['possibly_sensitive'].fillna(\"not_found\")\n",
    "global_tweets_df.isna().sum()\n",
    "# The missing rows under the column 'possibly_sensitive' have been repaced with \"not_found\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(9890, 16)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df[global_tweets_df['place'] == ''].shape\n",
    "# Eventhough on the above output there were 0 missing data under the column 'place' those missing data's were \n",
    "# an empty string rather than a null value, so we have to replace those value with \"not_known\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "created_at            0\n",
       "source                0\n",
       "full_text             0\n",
       "polarity              0\n",
       "subjectivity          0\n",
       "sentiment             0\n",
       "lang                  0\n",
       "favorite_count        0\n",
       "retweet_count         0\n",
       "original_author       0\n",
       "followers_count       0\n",
       "friends_count         0\n",
       "possibly_sensitive    0\n",
       "hashtags              0\n",
       "user_mentions         0\n",
       "place                 0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df['place'] = global_tweets_df['place'].replace(['', ' '], 'not_known')\n",
    "global_tweets_df.isna().sum()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### REMOVE UNWANTED CHARACTERS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "124       Nunya*\n",
       "125    not_known\n",
       "Name: place, dtype: object"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df['place'][124:126]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "created_at            0\n",
       "source                0\n",
       "full_text             0\n",
       "polarity              0\n",
       "subjectivity          0\n",
       "sentiment             0\n",
       "lang                  0\n",
       "favorite_count        0\n",
       "retweet_count         0\n",
       "original_author       0\n",
       "followers_count       0\n",
       "friends_count         0\n",
       "possibly_sensitive    0\n",
       "hashtags              0\n",
       "user_mentions         0\n",
       "place                 0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df = global_clean_tweets.remove_place_characters(global_tweets_df)\n",
    "global_tweets_df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "124        Nunya\n",
       "125    not_known\n",
       "Name: place, dtype: object"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df['place'][124:126]\n",
    "# We can see that invalid characters under the column 'place' are replaced and cleaned "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### CONVERT STRING TO DATETIME"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 21997 entries, 0 to 21999\n",
      "Data columns (total 16 columns):\n",
      " #   Column              Non-Null Count  Dtype  \n",
      "---  ------              --------------  -----  \n",
      " 0   created_at          21997 non-null  object \n",
      " 1   source              21997 non-null  object \n",
      " 2   full_text           21997 non-null  object \n",
      " 3   polarity            21997 non-null  float64\n",
      " 4   subjectivity        21997 non-null  float64\n",
      " 5   sentiment           21997 non-null  object \n",
      " 6   lang                21997 non-null  object \n",
      " 7   favorite_count      21997 non-null  int64  \n",
      " 8   retweet_count       21997 non-null  int64  \n",
      " 9   original_author     21997 non-null  object \n",
      " 10  followers_count     21997 non-null  int64  \n",
      " 11  friends_count       21997 non-null  int64  \n",
      " 12  possibly_sensitive  21997 non-null  object \n",
      " 13  hashtags            21997 non-null  object \n",
      " 14  user_mentions       21997 non-null  object \n",
      " 15  place               21997 non-null  object \n",
      "dtypes: float64(2), int64(4), object(10)\n",
      "memory usage: 2.9+ MB\n"
     ]
    }
   ],
   "source": [
    "global_tweets_df.info()\n",
    "# We can see that below the column 'created_at' has the type of object/string, we will change this to\n",
    "# datetime using pd.to_datetime(df) which is called by global_clean_tweets.convert_to_datetime(global_tweets_df) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 21997 entries, 0 to 21999\n",
      "Data columns (total 16 columns):\n",
      " #   Column              Non-Null Count  Dtype              \n",
      "---  ------              --------------  -----              \n",
      " 0   created_at          21997 non-null  datetime64[ns, UTC]\n",
      " 1   source              21997 non-null  object             \n",
      " 2   full_text           21997 non-null  object             \n",
      " 3   polarity            21997 non-null  float64            \n",
      " 4   subjectivity        21997 non-null  float64            \n",
      " 5   sentiment           21997 non-null  object             \n",
      " 6   lang                21997 non-null  object             \n",
      " 7   favorite_count      21997 non-null  int64              \n",
      " 8   retweet_count       21997 non-null  int64              \n",
      " 9   original_author     21997 non-null  object             \n",
      " 10  followers_count     21997 non-null  int64              \n",
      " 11  friends_count       21997 non-null  int64              \n",
      " 12  possibly_sensitive  21997 non-null  object             \n",
      " 13  hashtags            21997 non-null  object             \n",
      " 14  user_mentions       21997 non-null  object             \n",
      " 15  place               21997 non-null  object             \n",
      "dtypes: datetime64[ns, UTC](1), float64(2), int64(4), object(9)\n",
      "memory usage: 2.9+ MB\n"
     ]
    }
   ],
   "source": [
    "global_tweets_df = global_clean_tweets.convert_to_datetime(global_tweets_df)\n",
    "global_tweets_df.info()\n",
    "# Now we can see that it is converted to datetime64"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### CLEAN SOURCE DATA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    <a href=\"http://twitter.com/download/android\" ...\n",
       "1    <a href=\"http://twitter.com/download/android\" ...\n",
       "2    <a href=\"http://twitter.com/download/android\" ...\n",
       "3    <a href=\"http://twitter.com/download/android\" ...\n",
       "4    <a href=\"http://twitter.com/download/iphone\" r...\n",
       "Name: source, dtype: object"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df['source'][:5]\n",
    "# We can see that understanding device type from source column is not easily readable so we will extract \n",
    "# source using global_clean_tweets.extract_twitter_source(global_tweets_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    Twitter for Android\n",
       "1    Twitter for Android\n",
       "2    Twitter for Android\n",
       "3    Twitter for Android\n",
       "4     Twitter for iPhone\n",
       "Name: source, dtype: object"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df[\"source\"] = global_tweets_df[\"source\"].apply(global_clean_tweets.extract_twitter_source)\n",
    "global_tweets_df['source'][:5]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### SAVE THE PRE PROCESSED DATA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "global_tweets_df.to_csv(\"../data/processed_global_data_tweets.csv\", index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## DATA EXPLORATION AND VISUALIZATIONS"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### BASIC INFORMATION"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_at</th>\n",
       "      <th>source</th>\n",
       "      <th>full_text</th>\n",
       "      <th>polarity</th>\n",
       "      <th>subjectivity</th>\n",
       "      <th>sentiment</th>\n",
       "      <th>lang</th>\n",
       "      <th>favorite_count</th>\n",
       "      <th>retweet_count</th>\n",
       "      <th>original_author</th>\n",
       "      <th>followers_count</th>\n",
       "      <th>friends_count</th>\n",
       "      <th>possibly_sensitive</th>\n",
       "      <th>hashtags</th>\n",
       "      <th>user_mentions</th>\n",
       "      <th>place</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-08-07 22:31:20+00:00</td>\n",
       "      <td>Twitter for Android</td>\n",
       "      <td>RT @i_ameztoy Extra random image I Lets focus ...</td>\n",
       "      <td>-1.250000e-01</td>\n",
       "      <td>0.190625</td>\n",
       "      <td>negative</td>\n",
       "      <td>en</td>\n",
       "      <td>15760</td>\n",
       "      <td>2</td>\n",
       "      <td>i_ameztoy</td>\n",
       "      <td>20497</td>\n",
       "      <td>2621</td>\n",
       "      <td>not_found</td>\n",
       "      <td>City++++</td>\n",
       "      <td>i_ameztoy++++</td>\n",
       "      <td>not_known</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-08-07 22:31:16+00:00</td>\n",
       "      <td>Twitter for Android</td>\n",
       "      <td>RT @IndoPac_Info #Chinas media explains the mi...</td>\n",
       "      <td>-1.000000e-01</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>negative</td>\n",
       "      <td>en</td>\n",
       "      <td>6967</td>\n",
       "      <td>201</td>\n",
       "      <td>ZIisq</td>\n",
       "      <td>65</td>\n",
       "      <td>272</td>\n",
       "      <td>not_found</td>\n",
       "      <td>China++++Taiwan++++</td>\n",
       "      <td>IndoPac_Info++++</td>\n",
       "      <td>not_known</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-08-07 22:31:07+00:00</td>\n",
       "      <td>Twitter for Android</td>\n",
       "      <td>China even cut off communication they dont anw...</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>neutral</td>\n",
       "      <td>en</td>\n",
       "      <td>2166</td>\n",
       "      <td>0</td>\n",
       "      <td>Fin21Free</td>\n",
       "      <td>85</td>\n",
       "      <td>392</td>\n",
       "      <td>not_found</td>\n",
       "      <td>XiJinping++++</td>\n",
       "      <td>ZelenskyyUa++++</td>\n",
       "      <td>Netherlands</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-08-07 22:31:06+00:00</td>\n",
       "      <td>Twitter for Android</td>\n",
       "      <td>Putin to #XiJinping I told you my friend Taiwa...</td>\n",
       "      <td>1.000000e-01</td>\n",
       "      <td>0.350000</td>\n",
       "      <td>positive</td>\n",
       "      <td>en</td>\n",
       "      <td>2166</td>\n",
       "      <td>0</td>\n",
       "      <td>Fin21Free</td>\n",
       "      <td>85</td>\n",
       "      <td>392</td>\n",
       "      <td>not_found</td>\n",
       "      <td>XiJinping++++</td>\n",
       "      <td></td>\n",
       "      <td>Netherlands</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-08-07 22:31:04+00:00</td>\n",
       "      <td>Twitter for iPhone</td>\n",
       "      <td>RT @ChinaUncensored I’m sorry I thought Taiwan...</td>\n",
       "      <td>-6.938894e-18</td>\n",
       "      <td>0.556250</td>\n",
       "      <td>negative</td>\n",
       "      <td>en</td>\n",
       "      <td>17247</td>\n",
       "      <td>381</td>\n",
       "      <td>VizziniDolores</td>\n",
       "      <td>910</td>\n",
       "      <td>2608</td>\n",
       "      <td>not_found</td>\n",
       "      <td></td>\n",
       "      <td>ChinaUncensored++++</td>\n",
       "      <td>Ayent Schweiz</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 created_at               source  \\\n",
       "0 2022-08-07 22:31:20+00:00  Twitter for Android   \n",
       "1 2022-08-07 22:31:16+00:00  Twitter for Android   \n",
       "2 2022-08-07 22:31:07+00:00  Twitter for Android   \n",
       "3 2022-08-07 22:31:06+00:00  Twitter for Android   \n",
       "4 2022-08-07 22:31:04+00:00   Twitter for iPhone   \n",
       "\n",
       "                                           full_text      polarity  \\\n",
       "0  RT @i_ameztoy Extra random image I Lets focus ... -1.250000e-01   \n",
       "1  RT @IndoPac_Info #Chinas media explains the mi... -1.000000e-01   \n",
       "2  China even cut off communication they dont anw...  0.000000e+00   \n",
       "3  Putin to #XiJinping I told you my friend Taiwa...  1.000000e-01   \n",
       "4  RT @ChinaUncensored I’m sorry I thought Taiwan... -6.938894e-18   \n",
       "\n",
       "   subjectivity sentiment lang  favorite_count  retweet_count original_author  \\\n",
       "0      0.190625  negative   en           15760              2       i_ameztoy   \n",
       "1      0.100000  negative   en            6967            201           ZIisq   \n",
       "2      0.000000   neutral   en            2166              0       Fin21Free   \n",
       "3      0.350000  positive   en            2166              0       Fin21Free   \n",
       "4      0.556250  negative   en           17247            381  VizziniDolores   \n",
       "\n",
       "   followers_count  friends_count possibly_sensitive             hashtags  \\\n",
       "0            20497           2621          not_found             City++++   \n",
       "1               65            272          not_found  China++++Taiwan++++   \n",
       "2               85            392          not_found        XiJinping++++   \n",
       "3               85            392          not_found        XiJinping++++   \n",
       "4              910           2608          not_found                        \n",
       "\n",
       "         user_mentions          place  \n",
       "0        i_ameztoy++++      not_known  \n",
       "1     IndoPac_Info++++      not_known  \n",
       "2      ZelenskyyUa++++    Netherlands  \n",
       "3                         Netherlands  \n",
       "4  ChinaUncensored++++  Ayent Schweiz  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df = pd.read_csv(\"../data/processed_global_data_tweets.csv\")\n",
    "global_tweets_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "created_at            0\n",
       "source                0\n",
       "full_text             0\n",
       "polarity              0\n",
       "subjectivity          0\n",
       "sentiment             0\n",
       "lang                  0\n",
       "favorite_count        0\n",
       "retweet_count         0\n",
       "original_author       0\n",
       "followers_count       0\n",
       "friends_count         0\n",
       "possibly_sensitive    0\n",
       "hashtags              0\n",
       "user_mentions         0\n",
       "place                 0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df.isna().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ORIGINAL AUTHORS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "TrumpThuan        116\n",
       "CGMeifangZhang     65\n",
       "AarianNewsX        59\n",
       "Lin73324756        48\n",
       "Bin20211001        46\n",
       "                 ... \n",
       "papago5             1\n",
       "pmsxa               1\n",
       "SomethingThar       1\n",
       "omotenashi_cx       1\n",
       "ZeitounRimal        1\n",
       "Name: original_author, Length: 13433, dtype: int64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df['original_author'].value_counts()\n",
    "# Authors count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "global_tweets_df['original_author'].value_counts().head(15).plot(kind='pie',  title=\"Top 15 Authors\");\n",
    "#Top 15 authors plotted using pie chart\n",
    "#We can see that author \"TrumpThuan\" has 116 tweets making him/her the top author of the collected data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "global_tweets_df['original_author'].value_counts().head(15).plot(kind='bar',  title=\"Top 15 Authors\");\n",
    "#Top 15 authors plotted using bar graph"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### USER MENTIONS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0              i_ameztoy++++\n",
       "1           IndoPac_Info++++\n",
       "2            ZelenskyyUa++++\n",
       "3                           \n",
       "4        ChinaUncensored++++\n",
       "                ...         \n",
       "21995       IndoPac_Info++++\n",
       "21996       IndoPac_Info++++\n",
       "21997            Reuters++++\n",
       "21998       IndoPac_Info++++\n",
       "21999       IndoPac_Info++++\n",
       "Name: user_mentions, Length: 21997, dtype: object"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df['user_mentions']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0              i_ameztoy++++\n",
       "1           IndoPac_Info++++\n",
       "2            ZelenskyyUa++++\n",
       "4        ChinaUncensored++++\n",
       "5         benedictrogers++++\n",
       "                ...         \n",
       "21995       IndoPac_Info++++\n",
       "21996       IndoPac_Info++++\n",
       "21997            Reuters++++\n",
       "21998       IndoPac_Info++++\n",
       "21999       IndoPac_Info++++\n",
       "Name: user_mentions, Length: 18695, dtype: object"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_user_mentions_list_df = global_tweets_df.loc[global_tweets_df[\"user_mentions\"] != \"\"]\n",
    "global_user_mentions_list_df = global_user_mentions_list_df['user_mentions']\n",
    "global_user_mentions_list_df\n",
    "# We take the rows that have values in the column 'user_mentions'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_mentions</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>benedictrogers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>BarkingMaad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>EnemyInAState</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>khalediskef</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AlArabiya_Eng</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>revmahoney</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>WilliamYang120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>serpentza</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>CGMeifangZhang</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>ChaoyangShaoxia</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     user_mentions\n",
       "0   benedictrogers\n",
       "1      BarkingMaad\n",
       "2    EnemyInAState\n",
       "3      khalediskef\n",
       "4    AlArabiya_Eng\n",
       "5       revmahoney\n",
       "6   WilliamYang120\n",
       "7        serpentza\n",
       "8   CGMeifangZhang\n",
       "9  ChaoyangShaoxia"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "splitted_user_mentions = []\n",
    "for mentions_list in global_user_mentions_list_df[40:60]:\n",
    "    mentions_list = mentions_list.split(\"++++\")\n",
    "    for user_mentions in mentions_list:\n",
    "        if user_mentions != '':\n",
    "            splitted_user_mentions.append(user_mentions)\n",
    "splitted_user_mentions_df = pd.DataFrame(splitted_user_mentions, columns=['user_mentions'])\n",
    "splitted_user_mentions_df.head(10)\n",
    "#create dataframe where each 'user_mention' is splitted and gets a new row"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "user_mentions  \n",
       "SpokespersonCHN    3\n",
       "CGMeifangZhang     3\n",
       "StephenMcDonell    1\n",
       "serpentza          1\n",
       "revmahoney         1\n",
       "kuomintang         1\n",
       "khalediskef        1\n",
       "container_news     1\n",
       "benedictrogers     1\n",
       "WilliamYang120     1\n",
       "AlArabiya_Eng      1\n",
       "AnonOpsSE          1\n",
       "PaulJawin          1\n",
       "POTUS              1\n",
       "IndoPac_Info       1\n",
       "EnemyInAState      1\n",
       "ChaoyangShaoxia    1\n",
       "BarkingMaad        1\n",
       "Apple              1\n",
       "timand2037         1\n",
       "dtype: int64"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "splitted_user_mentions_df.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "splitted_user_mentions_df.value_counts().head(4).plot(kind='bar', title=\"Top 4 user mentions\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "splitted_user_mentions_df.value_counts().head(4).plot(kind='pie', title=\"Top 4 user mentions\");\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### LOCATIONS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "                          598\n",
       "                          244\n",
       "India                     200\n",
       "United States             166\n",
       "Hong Kong                 153\n",
       "                         ... \n",
       "Makassar Indonesia          1\n",
       "xx                          1\n",
       "Lephalale South Africa      1\n",
       "Occopied Pakistan           1\n",
       "Gelendzhik                  1\n",
       "Name: place, Length: 3921, dtype: int64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "place_global_tweets_df = global_tweets_df[global_tweets_df['place']!='not_known']\n",
    "place_global_tweets_df['place'].value_counts()\n",
    "#We can see that majority of the known location of the users in this dataset are from India,\n",
    "# US, Hong Kong, and Vit Nam"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "place_global_tweets_df['place'].value_counts().head(6).plot(kind='bar', title=\"Top 6 user locations\");\n",
    "# Top 6 user locations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "place_global_tweets_df['place'].value_counts().head(6).plot(kind='pie', title=\"Top 6 user locations\");\n",
    "# Top 6 user locations"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### HASHTAGS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0                                        City++++\n",
       "1                             China++++Taiwan++++\n",
       "2                                   XiJinping++++\n",
       "3                                   XiJinping++++\n",
       "4                                                \n",
       "                           ...                   \n",
       "21995    China++++Taiwan++++ChinaTaiwanCrisis++++\n",
       "21996    China++++Taiwan++++ChinaTaiwanCrisis++++\n",
       "21997                                  Pelosi++++\n",
       "21998                         Taiwan++++China++++\n",
       "21999                         Taiwan++++China++++\n",
       "Name: hashtags, Length: 21997, dtype: object"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df['hashtags']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0                                        City++++\n",
       "1                             China++++Taiwan++++\n",
       "2                                   XiJinping++++\n",
       "3                                   XiJinping++++\n",
       "4                                                \n",
       "                           ...                   \n",
       "21995    China++++Taiwan++++ChinaTaiwanCrisis++++\n",
       "21996    China++++Taiwan++++ChinaTaiwanCrisis++++\n",
       "21997                                  Pelosi++++\n",
       "21998                         Taiwan++++China++++\n",
       "21999                         Taiwan++++China++++\n",
       "Name: hashtags, Length: 21997, dtype: object"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_hashtags_list_df = global_tweets_df.loc[global_tweets_df[\"hashtags\"] != \" \"]\n",
    "global_hashtags_list_df = global_hashtags_list_df['hashtags']\n",
    "global_hashtags_list_df\n",
    "# take the rows that have values column 'hashtag' \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hashtag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>City</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>China</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Taiwan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>XiJinping</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>XiJinping</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Taiwan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Taiwan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>TsaiIngwen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>PinkFloyd</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Taiwan</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      hashtag\n",
       "0        City\n",
       "1       China\n",
       "2      Taiwan\n",
       "3   XiJinping\n",
       "4   XiJinping\n",
       "5      Taiwan\n",
       "6      Taiwan\n",
       "7  TsaiIngwen\n",
       "8   PinkFloyd\n",
       "9      Taiwan"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "splitted_hashtags = []\n",
    "for hashtags_list in global_hashtags_list_df:\n",
    "    hashtags_list = hashtags_list.split(\"++++\")\n",
    "    for hashtag in hashtags_list:\n",
    "        if hashtag != '':\n",
    "            splitted_hashtags.append(hashtag)\n",
    "splitted_hashtags_df = pd.DataFrame(splitted_hashtags, columns=['hashtag'])\n",
    "splitted_hashtags_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "hashtag               \n",
       "Taiwan                    13732\n",
       "China                      6138\n",
       "Pelosi                     2458\n",
       "ChinaTaiwanCrisis           854\n",
       "US                          840\n",
       "                          ...  \n",
       "Gen1                          1\n",
       "Gaza_under_bombardment        1\n",
       "GazaUnderAttackk              1\n",
       "XiJinpingMustGo               1\n",
       "펠로시는못말려                       1\n",
       "Length: 4717, dtype: int64"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "splitted_hashtags_df.value_counts()\n",
    "#We can see that the '#Taiwan' has highest count in our dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Top 10 hashtags'}, xlabel='hashtag'>"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "splitted_hashtags_df.value_counts().head(10).plot(kind=\"bar\", title=\"Top 10 hashtags\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "splitted_hashtags_df.value_counts().head(10).plot(kind=\"pie\", title=\"Top 10 hashtags\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### SENTIMENTS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "neutral     8977\n",
       "positive    8187\n",
       "negative    4833\n",
       "Name: sentiment, dtype: int64"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df['sentiment'].value_counts()\n",
    "# We can see that most of the tweets have a neutral and posetive sentiment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX0AAAEaCAYAAAD9iIezAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAASaElEQVR4nO3df7BndV3H8ecLVlQ0+SEr1YLtppuIaIEb4NhYSglquZY/IlM3h2ZnivzZlNA0MSNQ0pSGU5KbUGgWElmQmkaINmqgy49EQGIFFTaM1YWVMIiFd398P4uXnbvc78XLOffyeT5m7txzPud8v9/38bKv78fP+ZxzUlVIkvqw29gFSJKGY+hLUkcMfUnqiKEvSR0x9CWpI4a+JHVk2dgFPJj99tuvVq5cOXYZkrSkXHbZZd+squWzbVvUob9y5Uo2btw4dhmStKQk+dqutjm8I0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SerIor44a2grT/jo2CU8rL76jpeMXYKkkdnTl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI745Cw9YvjkM2luU/X0k7wlydVJvpTkb5M8JsmqJJcm2ZTkQ0n2aPs+uq1vattXznifE1v7dUmOfpiOSZK0C3OGfpIVwBuBNVV1CLA7cCxwGvCuqnoqcBtwXHvJccBtrf1dbT+SHNxe9wzgGOA9SXZf2MORJD2Yacf0lwGPTbIM2BO4BXgBcF7bfjbwsra8tq3Tth+VJK39nKq6u6puBDYBh3/PRyBJmtqcoV9Vm4E/Ar7OJOy3AZcBt1fV9rbbzcCKtrwCuKm9dnvb/4kz22d5jSRpANMM7+zDpJe+CvhB4HFMhmceFknWJ9mYZOOWLVsero+RpC5NM7zz08CNVbWlqu4BPgw8F9i7DfcAHABsbsubgQMB2va9gG/NbJ/lNferqg1Vtaaq1ixfvvwhHJIkaVemCf2vA0cm2bONzR8FXANcDLyi7bMOOL8tX9DWads/WVXV2o9ts3tWAauBzy/MYUiSpjHnPP2qujTJecDlwHbgCmAD8FHgnCSntLYz20vOBD6QZBOwlcmMHarq6iTnMvnC2A4cX1X3LvDxSJIexFQXZ1XVScBJOzXfwCyzb6rqLuCVu3ifU4FT51mjJGmBeBsGSeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0JekjkwV+kn2TnJeki8nuTbJc5Lsm+TCJNe33/u0fZPk3Uk2JfliksNmvM+6tv/1SdY9XAclSZrdtD3904GPV9VBwI8C1wInABdV1WrgorYO8CJgdftZD5wBkGRf4CTgCOBw4KQdXxSSpGHMGfpJ9gKeB5wJUFX/V1W3A2uBs9tuZwMva8trgffXxCXA3kl+ADgauLCqtlbVbcCFwDELeCySpDlM09NfBWwB/jLJFUnel+RxwP5VdUvb5xvA/m15BXDTjNff3Np21S5JGsg0ob8MOAw4o6oOBe7ku0M5AFRVAbUQBSVZn2Rjko1btmxZiLeUJDXThP7NwM1VdWlbP4/Jl8B/t2Eb2u9b2/bNwIEzXn9Aa9tV+wNU1YaqWlNVa5YvXz6fY5EkzWHO0K+qbwA3JXlaazoKuAa4ANgxA2cdcH5bvgB4XZvFcySwrQ0DfQJ4YZJ92gncF7Y2SdJAlk253xuADybZA7gBeD2TL4xzkxwHfA14Vdv3Y8CLgU3Ad9q+VNXWJCcDX2j7vb2qti7IUUiSpjJV6FfVlcCaWTYdNcu+BRy/i/c5CzhrHvVJkhaQV+RKUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOLBu7AElaecJHxy7hYfXVd7xk7BLuZ09fkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHVk6tBPsnuSK5J8pK2vSnJpkk1JPpRkj9b+6La+qW1fOeM9Tmzt1yU5esGPRpL0oObT038TcO2M9dOAd1XVU4HbgONa+3HAba39XW0/khwMHAs8AzgGeE+S3b+38iVJ8zFV6Cc5AHgJ8L62HuAFwHltl7OBl7XltW2dtv2otv9a4JyquruqbgQ2AYcvwDFIkqY0bU//T4DfBu5r608Ebq+q7W39ZmBFW14B3ATQtm9r+9/fPstrJEkDmDP0k/wscGtVXTZAPSRZn2Rjko1btmwZ4iMlqRvT9PSfC7w0yVeBc5gM65wO7J1kxzN2DwA2t+XNwIEAbftewLdmts/ymvtV1YaqWlNVa5YvXz7vA5Ik7dqcoV9VJ1bVAVW1ksmJ2E9W1S8DFwOvaLutA85vyxe0ddr2T1ZVtfZj2+yeVcBq4PMLdiSSpDktm3uXXXobcE6SU4ArgDNb+5nAB5JsArYy+aKgqq5Oci5wDbAdOL6q7v0ePl+SNE/zCv2q+hTwqbZ8A7PMvqmqu4BX7uL1pwKnzrdISdLC8IpcSeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktSROUM/yYFJLk5yTZKrk7ypte+b5MIk17ff+7T2JHl3kk1JvpjksBnvta7tf32SdQ/fYUmSZjNNT3878JtVdTBwJHB8koOBE4CLqmo1cFFbB3gRsLr9rAfOgMmXBHAScARwOHDSji8KSdIw5gz9qrqlqi5vy3cA1wIrgLXA2W23s4GXteW1wPtr4hJg7yQ/ABwNXFhVW6vqNuBC4JiFPBhJ0oOb15h+kpXAocClwP5VdUvb9A1g/7a8Arhpxstubm27at/5M9Yn2Zhk45YtW+ZTniRpDlOHfpLHA38PvLmqvj1zW1UVUAtRUFVtqKo1VbVm+fLlC/GWkqRmqtBP8igmgf/Bqvpwa/7vNmxD+31ra98MHDjj5Qe0tl21S5IGMs3snQBnAtdW1TtnbLoA2DEDZx1w/oz217VZPEcC29ow0CeAFybZp53AfWFrkyQNZNkU+zwXeC1wVZIrW9vvAO8Azk1yHPA14FVt28eAFwObgO8Arweoqq1JTga+0PZ7e1VtXYiDkCRNZ87Qr6rPANnF5qNm2b+A43fxXmcBZ82nQEnSwvGKXEnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4Y+pLUEUNfkjpi6EtSRwx9SeqIoS9JHTH0Jakjhr4kdcTQl6SOGPqS1BFDX5I6YuhLUkcMfUnqiKEvSR0x9CWpI4a+JHXE0Jekjhj6ktQRQ1+SOmLoS1JHDH1J6oihL0kdMfQlqSOGviR1xNCXpI4MHvpJjklyXZJNSU4Y+vMlqWeDhn6S3YE/A14EHAz8UpKDh6xBkno2dE//cGBTVd1QVf8HnAOsHbgGSerWsoE/bwVw04z1m4EjZu6QZD2wvq3+T5LrBqptDPsB3xzqw3LaUJ/UDf9+S9cj/W/3Q7vaMHToz6mqNgAbxq5jCEk2VtWasevQQ+Pfb+nq+W839PDOZuDAGesHtDZJ0gCGDv0vAKuTrEqyB3AscMHANUhStwYd3qmq7Ul+A/gEsDtwVlVdPWQNi0wXw1iPYP79lq5u/3apqrFrkCQNxCtyJakjhr4kdcTQl6SOGPqSupHksUmeNnYdYzL0pXnIxGuS/F5bf3KSw8euS3NL8nPAlcDH2/qPJeluyrizdwaS5A5gtv+xA1RVPWHgkvQQJDkDuA94QVU9Pck+wL9U1Y+PXJrmkOQy4AXAp6rq0NZ2VVU9c9zKhrXobsPwSFVV3zd2DVoQR1TVYUmuAKiq29qFhlr87qmqbUlmtnXX6zX0R5LkScBjdqxX1ddHLEfTu6fdIrwAkixn0vPX4nd1klcDuydZDbwR+NzINQ3OMf2BJXlpkuuBG4FPA18F/nnUojQf7wb+AXhSklOBzwC/P25JmtIbgGcAdwN/A2wD3jxmQWNwTH9gSf6Dybjiv1bVoUmeD7ymqo4buTRNKclBwFFMzsdcVFXXjlySppDksKq6fOw6xmZPf3j3VNW3gN2S7FZVFwNd3uJ1KUrybmDfqvqzqvpTA39J+eMk1yY5OckhYxczFkN/eLcneTzwb8AHk5wO3DlyTZreZcDvJvlKkj9K4hf2ElFVzweeD2wB3pvkqiS/O3JZg3N4Z2BJHgf8L5Mv3F8G9gI+2Hr/WiKS7Au8nMntwZ9cVatHLknzkOSZwG8Dv1hVXc2+cvbOgNqsj4+0Hsd9wNkjl6SH7qnAQUweS+cQzxKQ5OnALzL5sv4W8CHgN0ctagSG/oCq6t4k9yXZq6q2jV2P5i/JHwI/D3yFSWicXFW3j1qUpnUWk7/Z0VX1X2MXMxZDf3j/A1yV5EJmjOVX1RvHK0nz8BXgOVU12EO1tTCq6jlj17AYOKY/sCTrZmmuqnr/4MVoakkOqqovJzlstu1OBVy8kpxbVa9KchUPvAJ3xy1QnjVSaaOwpz+8vavq9JkNSd40VjGa2luB9cAfz7KtmFx7ocVpx7+vnx21ikXCnv7AklxeVYft1HbFjhtAaXFL8piqumuuNi0+SU6rqrfN1fZI5zz9gST5pST/BKxKcsGMn4uBrWPXp6nNdq+W7u7fskT9zCxtLxq8ipE5vDOczwG3APvxwCGCO4AvjlKRppbk+4EVwGOTHMpkPBjgCcCeoxWmOSX5NeDXgR9OMvPf2vcBnx2nqvE4vCNNoZ2A/xUmt8zYOGPTHcBfVdWHx6hLc0uyF7AP8AfACTM23VFV3f2/bEN/YDs9TGUP4FHAnT5EZWlI8vKq+vux69BD1/ttzR3eGdjMh6lk8jSHtcCR41WkaSR5TVX9NbAyyVt33l5V7xyhLM1De1ziO4EfBG7lu1dTP2PMuobmidwR1cQ/AkePXYvm9Lj2+/FMxoJ3/tHidwqTDtZ/VtUqJrfHvmTckobn8M7AkvzCjNXdmIwR/6RXC0oPryQbq2pNe6bFoVV1X5L/qKofHbu2ITm8M7yfm7G8ncmTs9aOU4rmq9175xQmd0r9OPAs4C1t6EeL2863Nb+VDm9rbk9fmockV1bVjyX5eSZXeL4V+LfeeotLUbut+V1Mptt2e1tze/oDS/IjwBnA/lV1SJJnAS+tqlNGLk3T2fFv5iXA31XVtsn5eC12VTWzV9/tbc09kTu8vwBOBO4BqKovMnkQh5aGjyT5MvBs4KIky5n0HrXIJbkjybd3+rkpyT8k+eGx6xuKPf3h7VlVn9+pd7h9rGI0P1V1QhvX39aej3AnnpNZKv4EuBn4GyZDPMcCTwEuZ3Kv/Z8aq7AhGfrD+2aSp9Au0EryCia3Z9ASkORRwGuA57Uv7k8Dfz5qUZrWS3c697KhnaN5W5LfGa2qgRn6wzse2AAclGQzcCOTk0paGs5gchX1e9r6a1vbr45Wkab1nSSvAs5r66/gu0Nz3cxocfbOwJI8msl/bCuBfYFvM7lO6+1j1qXpzDavu8e53ktRG7c/HXgOk5C/BHgLsBl4dlV9ZsTyBmNPf3jnA7czGUfs9jmdS9i9SZ5SVV+B+4Pk3pFr0hSq6gYeeJ3MTF0EPhj6Yzigqo4Zuwg9ZL8FXJzkhra+Enj9eOVoWk6XnnDK5vA+l+SZYxehh+yzwHuB+5g8/Oa9wL+PWpGm5XRp7OmP4SeAX0lyI3A3nT6ceQl7P5PzMCe39VcDHwBeOVpFmpbTpTH0x9Dd49keYQ6pqoNnrF+c5JrRqtF8OF0aQ39wVfW1sWvQ9+TyJEdW1SUASY7ggU/S0uLldGmcsinNS5JrgacBO5629GTgOibDBA7TLWJOl56wpy/NjzOvli6nS2NPX1Inknypqg4Zu46xOWVTUi+cLo09fUmdaLOsnsrkBG6306UNfUldSPJDs7X3NqPO0JekjjimL0kdMfQlqSOGviR1xNCXpI4Y+pLUkf8Ha3X8PL06lH4AAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "global_tweets_df['sentiment'].value_counts().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:ylabel='sentiment'>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "global_tweets_df['sentiment'].value_counts().plot(kind='pie')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### TWEET SOURCES"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Twitter for Android     8391\n",
       "Twitter Web App         6791\n",
       "Twitter for iPhone      5212\n",
       "Twitter for iPad         634\n",
       "TweetDeck                171\n",
       "                        ... \n",
       "Twitterrific for Mac       1\n",
       "Reddit__News               1\n",
       "Vanprob Retweet            1\n",
       "Sénégal Retweet            1\n",
       "NewsNacho                  1\n",
       "Name: source, Length: 240, dtype: int64"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "global_tweets_df['source'].value_counts()\n",
    "#We can see that the majority of the tweets were from an android device"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Top 7 Tweet sources'}>"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "global_tweets_df['source'].value_counts().head(7).plot(kind='bar', title=\"Top 7 Tweet sources\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Top 4 Tweet sources'}, ylabel='source'>"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "global_tweets_df['source'].value_counts().head(4).plot(kind='pie', title=\"Top 4 Tweet sources\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "23594bc56d5e7779377c96f362b7b8ee0ca743d7d4ba50996de9368b2850dabe"
  },
  "kernelspec": {
   "display_name": "Python 3.9.7 ('base')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
